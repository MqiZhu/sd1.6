from io import BytesIO
import base64

from PIL import Image, ImageDraw, ImageFont


def load_explicit_watermark_image():
    base64_str = ""
    return Image.open(BytesIO(base64.b64decode(base64_str)))


explicit_watermark_image = load_explicit_watermark_image()


def explicit_watermark(original_image, user_id):
    watermark_width, watermark_height = explicit_watermark_image.size  
    x = original_image.width - watermark_width - 10  
    y = original_image.height - watermark_height - 10  
    original_image.paste(explicit_watermark_image, (x, y), explicit_watermark_image)  

    user_id_text = str(user_id)  
    user_id_font = ImageFont.load_default()
    draw = ImageDraw.Draw(original_image)  
    draw.text((original_image.width - 125, original_image.height - 20), user_id_text, font=user_id_font, fill=(255, 255, 255, 128))  

    return original_image


def implicit_watermark():
    pass


def batch_watermark(original_images, user_id):
    images = []
    for original_image in original_images:
        image = explicit_watermark(original_image, user_id)
        images.append(image)
    
    return images


